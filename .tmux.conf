# * Prefix
# remap prefix to Control + a
set -g prefix 'C-q'
# bind 'C-a C-a' to type 'C-a'
bind 'C-q' send-prefix
unbind C-b

# ** Drag pane border to resize
# set   -g mouse-resize-pane off # incompatible in tmux 2.1+
bind -T root MouseDrag1Border resize-pane -M # default
# unbind -T root MouseDrag1Border # disable drag pane border to resize

# * Look & Feel
# ** Colors

# *** Status Bar Colors
set   -g status-style                 fg=colour246,bg=colour233 # default for whole status line
set   -g status-left-style            fg=white,bold,bg=colour233
set   -g status-right-style           fg=colour75,none,bg=colour233

# *** Message Colors
set   -g message-style                fg=colour2,bold,bg=default

# *** Window Status Colors
setw  -g window-status-style          default # default for all window statuses
setw  -g window-status-last-style     fg=default,bg=colour235
setw  -g window-status-current-style  fg=white,bold,bg=colour63
setw  -g window-status-bell-style     default
setw  -g window-status-activity-style fg=white,none,bg=colour196
# setw  -g window-status-content-style  fg=black,none,bg=green # incompatible with tmux 2.0+

# *** Pane Colors
setw  -g pane-active-border-style     fg=colour63,bg=default
setw  -g pane-border-style            fg=colour235,bg=default
setw  -g window-active-style          'bg=#330000' # bg color of active pane
setw  -g window-style                 'bg=black' # bg color of inactive pane(s)

# *** Mode Info Colors
# Color of display shown on top-right in copy-mode, highlighting
setw  -g mode-style                   fg=black,bg=colour244

# *** Status Bar Color# ** Message Colors
set   -g message-style                fg=colour2,bold,bg=default

# ** Window Status Colors
# *** set inactive/active window styles

#or if you a brighter active border, uncomment the following line:
#set -g pane-active-border-bg colour51

# ** Mode Info Colors
# Color of display shown on top-right in copy-mode, highlighting
setw  -g mode-style                   fg=black,bg=colour244

# * Activity
# Notify when a window has activity
# This quick snippet will have tmux notify you in the status area when a
# window has activity:
setw  -g monitor-activity on
set   -g visual-activity  off # Display message telling that an activity happened (on/off)
# It lets me know that there is activity in a non-active window
# To try this, enter `sleep 10 && echo “Hi”` in a window and switch to
# another window.

# Move focus to command prompt. tmux commands can be entered there directly
# without using the `tmux` prefix and it also supports auto-complete.
bind C-x command-prompt # default command-prompt binding "PREFIX :" also works

# move status line to top
# set -g status-position top
# color
set-option -g default-terminal screen-256color
set -g terminal-overrides 'xterm:colors=256'

# * Mouse
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M

# * Keybindngs
# ** Pane & Window
unbind 1
unbind ^C
unbind &
bind 1 break-pane
bind 2 split-window -v
bind 3 split-window -h
bind C-k kill-pane
bind i display-panes
bind C-K kill-window
bind n next-window
bind p previous-window
bind c new-window

# ** Window Options
# https://github.com/kaushalmodi/dotfiles/blob/master/tmux/dot-tmux.conf
# When a smaller terminal connects to a tmux client, it shrinks to fit it. The
# clients attached with bigger displays see this constrained view.
# aggressive-resize makes it such that the window is only resized if the smaller
# client is actively looking at it.
setw -g aggressive-resize on
setw -g mode-keys         emacs # Use emacs keybindings in copy mode
setw -g status-keys       emacs

# COPY & PASTE
# https://emacs.stackexchange.com/questions/7191/copy-and-paste-to-system-clipboard-in-tmux
# Copy tmux buffer to X clipboard
# run -b runs a shell command in background
# bind C-w run -b "tmux show-buffer | xclip -selection clipboard -i"
bind C-w run -b "tmux show-buffer | xclip -i"

# Paste from X clipboard into tmux; also replace newline characters with
# space characters when pasting
bind C-y run -b "exec </dev/null; xclip -o | awk 1 ORS=' ' | tmux load-buffer - ; tmux paste-buffer"
# Same as `C-y' binding except that the newline chars are not replaced with space
bind Y run -b "exec </dev/null; xclip -o | tmux load-buffer - ; tmux paste-buffer"
